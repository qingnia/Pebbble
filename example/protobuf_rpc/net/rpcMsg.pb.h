// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpcMsg.proto

#ifndef PROTOBUF_INCLUDED_rpcMsg_2eproto
#define PROTOBUF_INCLUDED_rpcMsg_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_rpcMsg_2eproto 

namespace protobuf_rpcMsg_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_rpcMsg_2eproto
namespace example {
class CalRequest;
class CalRequestDefaultTypeInternal;
extern CalRequestDefaultTypeInternal _CalRequest_default_instance_;
class CalResponse;
class CalResponseDefaultTypeInternal;
extern CalResponseDefaultTypeInternal _CalResponse_default_instance_;
class LoginInfo;
class LoginInfoDefaultTypeInternal;
extern LoginInfoDefaultTypeInternal _LoginInfo_default_instance_;
class LoginRet;
class LoginRetDefaultTypeInternal;
extern LoginRetDefaultTypeInternal _LoginRet_default_instance_;
class StatusRequest;
class StatusRequestDefaultTypeInternal;
extern StatusRequestDefaultTypeInternal _StatusRequest_default_instance_;
class StatusResponse;
class StatusResponseDefaultTypeInternal;
extern StatusResponseDefaultTypeInternal _StatusResponse_default_instance_;
class moveRequest;
class moveRequestDefaultTypeInternal;
extern moveRequestDefaultTypeInternal _moveRequest_default_instance_;
}  // namespace example
namespace google {
namespace protobuf {
template<> ::example::CalRequest* Arena::CreateMaybeMessage<::example::CalRequest>(Arena*);
template<> ::example::CalResponse* Arena::CreateMaybeMessage<::example::CalResponse>(Arena*);
template<> ::example::LoginInfo* Arena::CreateMaybeMessage<::example::LoginInfo>(Arena*);
template<> ::example::LoginRet* Arena::CreateMaybeMessage<::example::LoginRet>(Arena*);
template<> ::example::StatusRequest* Arena::CreateMaybeMessage<::example::StatusRequest>(Arena*);
template<> ::example::StatusResponse* Arena::CreateMaybeMessage<::example::StatusResponse>(Arena*);
template<> ::example::moveRequest* Arena::CreateMaybeMessage<::example::moveRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace example {

// ===================================================================

class LoginInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:example.LoginInfo) */ {
 public:
  LoginInfo();
  virtual ~LoginInfo();

  LoginInfo(const LoginInfo& from);

  inline LoginInfo& operator=(const LoginInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginInfo(LoginInfo&& from) noexcept
    : LoginInfo() {
    *this = ::std::move(from);
  }

  inline LoginInfo& operator=(LoginInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginInfo* internal_default_instance() {
    return reinterpret_cast<const LoginInfo*>(
               &_LoginInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(LoginInfo* other);
  friend void swap(LoginInfo& a, LoginInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginInfo* New() const final {
    return CreateMaybeMessage<LoginInfo>(NULL);
  }

  LoginInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoginInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoginInfo& from);
  void MergeFrom(const LoginInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 roleid = 1;
  void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  ::google::protobuf::int32 roleid() const;
  void set_roleid(::google::protobuf::int32 value);

  // int32 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:example.LoginInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 roomid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpcMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginRet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:example.LoginRet) */ {
 public:
  LoginRet();
  virtual ~LoginRet();

  LoginRet(const LoginRet& from);

  inline LoginRet& operator=(const LoginRet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginRet(LoginRet&& from) noexcept
    : LoginRet() {
    *this = ::std::move(from);
  }

  inline LoginRet& operator=(LoginRet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginRet* internal_default_instance() {
    return reinterpret_cast<const LoginRet*>(
               &_LoginRet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(LoginRet* other);
  friend void swap(LoginRet& a, LoginRet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginRet* New() const final {
    return CreateMaybeMessage<LoginRet>(NULL);
  }

  LoginRet* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoginRet>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoginRet& from);
  void MergeFrom(const LoginRet& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginRet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:example.LoginRet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpcMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CalRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:example.CalRequest) */ {
 public:
  CalRequest();
  virtual ~CalRequest();

  CalRequest(const CalRequest& from);

  inline CalRequest& operator=(const CalRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalRequest(CalRequest&& from) noexcept
    : CalRequest() {
    *this = ::std::move(from);
  }

  inline CalRequest& operator=(CalRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CalRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CalRequest* internal_default_instance() {
    return reinterpret_cast<const CalRequest*>(
               &_CalRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CalRequest* other);
  friend void swap(CalRequest& a, CalRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalRequest* New() const final {
    return CreateMaybeMessage<CalRequest>(NULL);
  }

  CalRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CalRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CalRequest& from);
  void MergeFrom(const CalRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CalRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 a = 1;
  void clear_a();
  static const int kAFieldNumber = 1;
  ::google::protobuf::int32 a() const;
  void set_a(::google::protobuf::int32 value);

  // int32 b = 2;
  void clear_b();
  static const int kBFieldNumber = 2;
  ::google::protobuf::int32 b() const;
  void set_b(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:example.CalRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 a_;
  ::google::protobuf::int32 b_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpcMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CalResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:example.CalResponse) */ {
 public:
  CalResponse();
  virtual ~CalResponse();

  CalResponse(const CalResponse& from);

  inline CalResponse& operator=(const CalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalResponse(CalResponse&& from) noexcept
    : CalResponse() {
    *this = ::std::move(from);
  }

  inline CalResponse& operator=(CalResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CalResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CalResponse* internal_default_instance() {
    return reinterpret_cast<const CalResponse*>(
               &_CalResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CalResponse* other);
  friend void swap(CalResponse& a, CalResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalResponse* New() const final {
    return CreateMaybeMessage<CalResponse>(NULL);
  }

  CalResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CalResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CalResponse& from);
  void MergeFrom(const CalResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CalResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 c = 1;
  void clear_c();
  static const int kCFieldNumber = 1;
  ::google::protobuf::int32 c() const;
  void set_c(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:example.CalResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 c_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpcMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StatusRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:example.StatusRequest) */ {
 public:
  StatusRequest();
  virtual ~StatusRequest();

  StatusRequest(const StatusRequest& from);

  inline StatusRequest& operator=(const StatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StatusRequest(StatusRequest&& from) noexcept
    : StatusRequest() {
    *this = ::std::move(from);
  }

  inline StatusRequest& operator=(StatusRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StatusRequest* internal_default_instance() {
    return reinterpret_cast<const StatusRequest*>(
               &_StatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(StatusRequest* other);
  friend void swap(StatusRequest& a, StatusRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StatusRequest* New() const final {
    return CreateMaybeMessage<StatusRequest>(NULL);
  }

  StatusRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StatusRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StatusRequest& from);
  void MergeFrom(const StatusRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StatusRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 cmd = 1;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:example.StatusRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 cmd_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpcMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StatusResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:example.StatusResponse) */ {
 public:
  StatusResponse();
  virtual ~StatusResponse();

  StatusResponse(const StatusResponse& from);

  inline StatusResponse& operator=(const StatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StatusResponse(StatusResponse&& from) noexcept
    : StatusResponse() {
    *this = ::std::move(from);
  }

  inline StatusResponse& operator=(StatusResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StatusResponse* internal_default_instance() {
    return reinterpret_cast<const StatusResponse*>(
               &_StatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(StatusResponse* other);
  friend void swap(StatusResponse& a, StatusResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StatusResponse* New() const final {
    return CreateMaybeMessage<StatusResponse>(NULL);
  }

  StatusResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StatusResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StatusResponse& from);
  void MergeFrom(const StatusResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StatusResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:example.StatusResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpcMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class moveRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:example.moveRequest) */ {
 public:
  moveRequest();
  virtual ~moveRequest();

  moveRequest(const moveRequest& from);

  inline moveRequest& operator=(const moveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  moveRequest(moveRequest&& from) noexcept
    : moveRequest() {
    *this = ::std::move(from);
  }

  inline moveRequest& operator=(moveRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const moveRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const moveRequest* internal_default_instance() {
    return reinterpret_cast<const moveRequest*>(
               &_moveRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(moveRequest* other);
  friend void swap(moveRequest& a, moveRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline moveRequest* New() const final {
    return CreateMaybeMessage<moveRequest>(NULL);
  }

  moveRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<moveRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const moveRequest& from);
  void MergeFrom(const moveRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(moveRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 direction = 1;
  void clear_direction();
  static const int kDirectionFieldNumber = 1;
  ::google::protobuf::int32 direction() const;
  void set_direction(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:example.moveRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 direction_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpcMsg_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LoginInfo

// int32 roleid = 1;
inline void LoginInfo::clear_roleid() {
  roleid_ = 0;
}
inline ::google::protobuf::int32 LoginInfo::roleid() const {
  // @@protoc_insertion_point(field_get:example.LoginInfo.roleid)
  return roleid_;
}
inline void LoginInfo::set_roleid(::google::protobuf::int32 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:example.LoginInfo.roleid)
}

// int32 roomid = 2;
inline void LoginInfo::clear_roomid() {
  roomid_ = 0;
}
inline ::google::protobuf::int32 LoginInfo::roomid() const {
  // @@protoc_insertion_point(field_get:example.LoginInfo.roomid)
  return roomid_;
}
inline void LoginInfo::set_roomid(::google::protobuf::int32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:example.LoginInfo.roomid)
}

// -------------------------------------------------------------------

// LoginRet

// int32 status = 1;
inline void LoginRet::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 LoginRet::status() const {
  // @@protoc_insertion_point(field_get:example.LoginRet.status)
  return status_;
}
inline void LoginRet::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:example.LoginRet.status)
}

// -------------------------------------------------------------------

// CalRequest

// int32 a = 1;
inline void CalRequest::clear_a() {
  a_ = 0;
}
inline ::google::protobuf::int32 CalRequest::a() const {
  // @@protoc_insertion_point(field_get:example.CalRequest.a)
  return a_;
}
inline void CalRequest::set_a(::google::protobuf::int32 value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:example.CalRequest.a)
}

// int32 b = 2;
inline void CalRequest::clear_b() {
  b_ = 0;
}
inline ::google::protobuf::int32 CalRequest::b() const {
  // @@protoc_insertion_point(field_get:example.CalRequest.b)
  return b_;
}
inline void CalRequest::set_b(::google::protobuf::int32 value) {
  
  b_ = value;
  // @@protoc_insertion_point(field_set:example.CalRequest.b)
}

// -------------------------------------------------------------------

// CalResponse

// int32 c = 1;
inline void CalResponse::clear_c() {
  c_ = 0;
}
inline ::google::protobuf::int32 CalResponse::c() const {
  // @@protoc_insertion_point(field_get:example.CalResponse.c)
  return c_;
}
inline void CalResponse::set_c(::google::protobuf::int32 value) {
  
  c_ = value;
  // @@protoc_insertion_point(field_set:example.CalResponse.c)
}

// -------------------------------------------------------------------

// StatusRequest

// int32 cmd = 1;
inline void StatusRequest::clear_cmd() {
  cmd_ = 0;
}
inline ::google::protobuf::int32 StatusRequest::cmd() const {
  // @@protoc_insertion_point(field_get:example.StatusRequest.cmd)
  return cmd_;
}
inline void StatusRequest::set_cmd(::google::protobuf::int32 value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:example.StatusRequest.cmd)
}

// -------------------------------------------------------------------

// StatusResponse

// int32 status = 1;
inline void StatusResponse::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 StatusResponse::status() const {
  // @@protoc_insertion_point(field_get:example.StatusResponse.status)
  return status_;
}
inline void StatusResponse::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:example.StatusResponse.status)
}

// -------------------------------------------------------------------

// moveRequest

// int32 direction = 1;
inline void moveRequest::clear_direction() {
  direction_ = 0;
}
inline ::google::protobuf::int32 moveRequest::direction() const {
  // @@protoc_insertion_point(field_get:example.moveRequest.direction)
  return direction_;
}
inline void moveRequest::set_direction(::google::protobuf::int32 value) {
  
  direction_ = value;
  // @@protoc_insertion_point(field_set:example.moveRequest.direction)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace example

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_rpcMsg_2eproto
