syntax = "proto2";


package example;

/***复杂类型定义start****/
message baseInfo{
	optional int32 roleid = 1;
	optional string name = 2;
	optional int32 status = 3;
}
/***复杂类型定义end******/

//登陆协议
message LoginInfo {
    optional int32 roleid = 1;
    optional int32 roomid = 2;
}

//进准备房间后要先同步所有已有玩家的信息
message playersInfo{
	optional commonResponse cr = 1;
	optional int32 roomHolder = 2;
	repeated baseInfo baseInfos = 3;
}

//聊天接收协议
message chatReceive {
    optional string said = 1;
}

//聊天转发协议
message chatBroadcast {
    optional int32 roleID = 1;
    optional string said = 2;
}

message CalRequest {
    optional int32 a = 1;
    optional int32 b = 2;
}

message CalResponse {
    optional int32 c = 1;
}

message StatusReceive {
    optional int32 cmd = 1;
}
message statusBroadcast {
    optional int32 roleID = 1;
    optional int32 cmd = 2;
}

message moveRequest {
    optional int32 direction = 1;
}
message moveBroadcast {
    optional int32 roleID = 1;
    optional int32 cmd = 2;
    optional int32 roomID = 3;
    optional int32 cardID = 4;
}

message commonResponse {
    optional int32 status = 1;
}
// �������
service rpcMsg { // ��ʱֻ�ṩ�ӷ�����
    // �ӷ�����
    rpc add(CalRequest) returns (CalResponse); // �������������ĺ�
    rpc login(LoginInfo) returns (playersInfo);
    rpc modifyStatus(StatusReceive) returns (commonResponse);
    rpc move(moveRequest) returns (commonResponse);
    rpc chat(chatReceive) returns (commonResponse);
}


//以下是服务器主动发给客户端的消息
//rpc chatBroad(chatBroadcast) returns (commonResponse);
//rpc statusBroad(statusBroadcast) returns (commonResponse);
//rpc moveBroad(moveBroadcast) returns (commonResponse);